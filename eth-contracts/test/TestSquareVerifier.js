// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates

// Test verification with correct proof
// - use the contents from proof.json generated from zokrates steps


// Test verification with incorrect proof

var Verifier = artifacts.require('Verifier');

contract('Verifier', accounts => {

    const account_one = accounts[0];
    let proof = require('./proof');

    describe('test square verifier - zokrates', function () {
        beforeEach(async function () {
            this.contract = await Verifier.new({ from: account_one, gas: 4700000 });
        })
        it('test verification with correct proof', async function () {

          const { proof: { a, b, c }, inputs: input } = proof;

          let isCorrect = await this.contract.verifyTx.call(a,b,c,input);
          assert.equal(isCorrect,true,"Verification with correct proof failed.");

        })

        it('test verification with incorrect proof', async function () {

          const { proof: { a, b, c }} = proof;
          let isCorrect = await this.contract.verifyTx.call(a,b,c,[3,3]);
          assert.equal(isCorrect,false,"Verification with incorrect proof failed.");

        })
      })

    })
